/*!
 *  Bayrell Core Library
 *
 *  (c) Copyright 2018-2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Core.Components.CodeEditor;

use Core.UI.Annotations.BindModel;
use Core.UI.Annotations.Event;
use Core.UI.Annotations.EventAsync;
use Core.UI.Events.MountEvent;
use Core.UI.Render.CoreView;


struct CodeEditor extends CoreView
{
	
	/**
	 * Component css
	 */
	lambda string css(Dict<string> vars) => 
		@css{
			%code_editor{
				position: relative;
				width: 100%;
			}
			%code_editor > textarea{
				display: none;
				width: 100%;
				height: 100%;
			}
			%code_editor .CodeMirror{
				height: 100%;
			}
		}
	;
	
	
	
	/**
	 * Component render
	 */
	lambda Template render(TreeModel model, UIStruct ui) =>
		
		<div @class='code_editor' @ref='code_editor'
			@annotations=[
				new EventAsync
				{
					"event": classof MountEvent,
					"method_name": "onMountFileEditor",
					"animation": true,
				}
			]
		>
			<textarea @ref='textarea_editor'
				@annotations=[
					new EventAsync
					{
						"event": classof MountEvent,
						"method_name": "onMountEditor"
					}
				]
			></textarea>
		</div>
	;
	
}
